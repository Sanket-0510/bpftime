name: Test bpftrace Scripts

on:
  push:
    branches: "*"
  pull_request:
    branches: "*"

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}-${{ github.event_name }}
  cancel-in-progress: true

jobs:
  build-runtime:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        enable_jit:
          - true
          - false
        container:
          - image: ubuntu-2204
            name: ubuntu
          - image: fedora-39
            name: fedora
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v2
        with:
          submodules: 'recursive'

      - name: Build and Install Runtime (with LLVM JIT)
        if: ${{ matrix.enable_jit }}
        run: |
          make release-with-llvm-jit -j
      - name: Build and Install Runtime (without LLVM JIT)
        if: ${{ !matrix.enable_jit }}
        run: |
          make release -j

      - name: Upload Build Results (without JIT)
        uses: actions/upload-artifact@v3
        if: ${{ !matrix.enable_jit }}
        with:
          name: runtime-package-no-jit-${{ matrix.container.name }}
          path: ~/.bpftime

      - name: Upload Build Results (with JIT)
        uses: actions/upload-artifact@v3
        if: ${{ matrix.enable_jit }}
        with:
          name: runtime-package-jit-${{ matrix.container.name }}
          path: ~/.bpftime

  build-and-test:
    runs-on: ubuntu-latest
    needs: [build-runtime]
    strategy:
      matrix:
        container:
          - image: ubuntu-2204
            name: ubuntu
          - image: fedora-39
            name: fedora
        enable_jit:
          - true
          - false
        examples:
          - path: libbpf-tools/opensnoop
            executable: ./opensnoop
            victim: ./victim
            syscall_trace: true
            expected_str: "   0 test.txt"
          # Add more test scenarios here

    steps:
      - name: Download Prebuilt Runtime (with JIT)
        if: ${{ matrix.enable_jit }}
        uses: actions/download-artifact@v3
        with:
          name: runtime-package-jit-${{ matrix.container.name }}
          path: ~/.bpftime

      - name: Download Prebuilt Runtime (without JIT)
        if: ${{ !matrix.enable_jit }}
        uses: actions/download-artifact@v3
        with:
          name: runtime-package-no-jit-${{ matrix.container.name }}
          path: ~/.bpftime

      - name: Set Permissions
        run: |
          chmod +x ~/.bpftime/*

      - name: Checkout Repository
        uses: actions/checkout@v2
        with:
          submodules: 'recursive'

      - name: Build Test Assets
        run: |
          make -C example/${{ matrix.examples.path }} -j

      - name: Test CLI - Show Help
        run: |
          export PATH=$PATH:~/.bpftime
          bpftime --help

      - name: Run Test Scenarios
        run: |
          for example in ${{ matrix.examples }}; do
            cd example/$example['path']
            if $example['syscall_trace']; then
              bpftime load bpftrace -e "$example['executable']" -- $example['victim'] | grep "$example['expected_str']"
            else
              bpftime load bpftrace -e "$example['executable']" -- $example['victim'] | grep -q "$example['expected_str']"
            fi
          done
